动画 / 状态路线图
=================

1. 互动节奏打磨（当前重点）
--------------------------------
- 目标：在调试面板里，让头部/身体点击、长按，以及快速连击追尾的体验始终稳定、节奏自然。
- 现状：turn/dizzy 节奏与区域判定已就绪；长按准备改为拖拽，原先的下巴动画走点击触发。
- 下一步：
  1. 记录各手势的时间参数（timePerFrame、最大循环时长、冷却时间）。
  2. 将长按改为拖拽，点击头/身体继续触发原有动作。
  3. 在 PRD/README 中整理最终的手势节奏表。

2. Idle 随机器
-----------------
- 目标：宠物长时间待机时，自动轮播 idle、relax、walk、look around 等轻量动作。
- 后续新增：覆盖整个地面区域的巡游、拖拽移动交互。
- 计划：
  1. 确定动作池：idle（呼吸）、relax（轻晃）、walk（待新增帧）、可选 lookaround。
  2. 设定权重与冷却：示例——idle 30%，relax 40%，lookaround 20%，walk 10%，单个动作最短冷却 30 秒。
  3. 在 ViewModel 中加入 IdleRandomiser，每 10–15 秒 roll 一次，通过 manualAnimationRequest 触发。
  4. 手动面板与自动逻辑共用同一派发路径，避免互相打断。
  5. 巡游模式：限定宠物在背景地面区域内自由巡游，随机停下并衔接其他轻量动作。

3. 数据驱动状态机
-------------------
- 目标：依据准备度、时间段、外部事件在 happy / tired / sleep 等基础状态之间切换。
- 思路：
  - 准备度 < 50 → tired；设定睡眠标记或深夜 → sleep。
  - 状态优先级：sleep > tired > idle/随机，强制状态播完后回到 idle 系统。
  - grooming、look left/right 等低频随机事件需要冷却，避免频繁出现。
  - turn/dizzy、头/身体触摸等互动统一走事件管线，和状态机互锁。
- 实施步骤：
  1. 抽出 StateController，集中管理状态与优先级。
  2. 先用 mock 输入（滑杆/按钮）验证逻辑。
  3. 状态机稳定后再接入真实 API 数据。

4. 日夜节奏（草案）
---------------------
- 夜间：
  - 22:00 起进入 tired；23:00 强制 sleep。交互可唤醒约 1 分钟，随后再次犯困。
  - 早晨（约 07:00）：高准备度 → Happy 问候；低准备度 → 疲惫开局。
- 日间疲劳：
  - 18:00 后逐渐偏向 tired。
  - 训练/步数增长可暂时提升准备度、刷新心情。

5. 成就与事件系统
--------------------
- 目标：统一处理任务完成、升级、饰品解锁等事件。
- 规划：
  1. 定义 GameEvent 接口，事件进入 ViewModel → manualAnimationRequest（如 hurray + 浮层）。
  2. 确保事件动画与状态机兼容，播完能回到基础状态。

6. watchOS / 其他平台
----------------------
- iOS 方案稳定后，同步复用逻辑并裁剪交互。

即时优先级
------------
1. 修复长按 → idle 的竞态，并记录手势时间参数。
2. walk 动画帧就绪后，实现 Idle 随机池。
3. 构建时间/状态原型（夜间困倦、睡眠、清晨准备度判定）。
4. 统一随机冷却与事件处理流程。

补充备忘
---------
- 夜间：22:00 疲惫、23:00 强制睡眠；交互唤醒约 1 分钟后返睡。
- 清晨：准备度好的话快乐醒来；差的话整天维持疲惫基调。
- 傍晚：18:00 后逐渐累积疲劳，训练或步数可缓解。
- Idle 动作池依赖 walk 帧。
- 长按闪回 idle 的 bug 优先处理。
- 布局草案：顶部三指标 + 等级经验条，中部宠物巡游区域，底部一行提醒文案。
- 主题系统：背景/角色/装扮需支持快速替换，提前预留房间装扮位。
- 每日任务：每天只有一个任务，根据当天准备度生成；若准备度偏低，第二天宠物会持续疲惫，完成对应的恢复任务（如 1 分钟正念）即可解除。

想法随记
---------
- 
